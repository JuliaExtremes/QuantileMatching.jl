var documenterSearchIndex = {"docs":
[{"location":"description/#Quantile-matching-in-Julia","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"","category":"section"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"The package provides several exhaustive high-performance functions to perform quantile matching (QM; see for example Panofsky and Brier, 1968 and Themeßl et al., 2011) of an actual distribution and a target distribution. It also provides the functions for the non-stationary case (see for example Michelangeli et al., 2009). ","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"Let F_X be the actual cumulative distribution function (cdf) and F_Y be the target cdf. Let x be a realization of F_X. The basic idea of the QM method is to find the value tildex such that","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"F_Y(tildex) = F_X(x)","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"Therefore,","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"tildex = F_Y^-1 leftlbrace F_X(x) rightrbrace","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"The package also provides functions for the CDF-t approach (Michelangeli et al., 2009) which extends the quantile matching framework to the non-stationary context. Let F_X^prime be the projected cdf with respect to F_X. The CDF-t approach defines the projected target cdf F_Y^prime as follows:","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"F_Y^prime(x) = F_Y left F_X^-1 leftlbrace F_X^prime(x) rightrbrace right","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"If x is a realization of the projected cdf F_X^prime, then the corresponding value tildex with respect to F_Y^prime is as follows:","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"tildex = F_Y^prime^-1 leftlbrace F_X^prime(x) rightrbrace","category":"page"},{"location":"description/#Package-interface","page":"Quantile matching in Julia","title":"Package interface","text":"","category":"section"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"To perform quantile matching, the model has to be defined in a AbstractQuantileMatchingModel and the method match can be applied to correct the given values. ","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"If the cdfs are known, the ParametricQuantileMatchingModel structure can be defined and the match method can be applied to it to perform quantile matching. In practice, the cdfs are generally unknown. They can be estimated either non-parametrically using the empirical distribution function or using a parametric estimate. The first approach is known as empirical quantile matching and the second as parametric quantile matching. The parametric estimates can be used to define the ParametricQuantileMatchingModel structure. ","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"Turnkey solutions are also provided to automatically perform quantile matching from random samples of different distributions. See for example eqm and pqm. More details are available in the Example.","category":"page"},{"location":"description/#Empirical-Quantile-Matching","page":"Quantile matching in Julia","title":"Empirical Quantile Matching","text":"","category":"section"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"For empirical quantile matching, the EmpiricalQuantileMatchingModel structure can be defined using","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"a sample of the target distribution; \na sample of the actual distribution;\na sample of the projected distribution. ","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"If the sample of the projected distribution is omitted, the matching method is stationary. Once the model is defined, the match method can be called to perform the matching.","category":"page"},{"location":"description/#Parametric-Quantile-Matching","page":"Quantile matching in Julia","title":"Parametric Quantile Matching","text":"","category":"section"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"For parametric quantile matching, the ParametricQuantileMatchingModel structure can be defined using","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"the target distribution; \nthe actual distribution;\nthe projected distribution. ","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"Those distributions should be in the class of UnivariateContinuousDistribution of the Julia package Distributions.jl. If the projected distribution is omitted, the matching method is stationary. Once the model is defined, the match method can be called to perform the matching.","category":"page"},{"location":"description/#Frequency-adjustment","page":"Quantile matching in Julia","title":"Frequency adjustment","text":"","category":"section"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"When working with a distribution having a mass at some point, such as 0 for precipitation, Themeßl et al. (2011) propose to censor the value of the realization x^star of the actual cdf as follows:","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"    x = begincases\n        0  text if  x^star_i leq u \n        x^star_i - u  text if  x^star_i  u\n        endcases","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"where u is the threshold for which the probability that X exceeds u is equal to the probability that Y exceeds 0. Quantile matching can then be performed on the censored values. The frequency adjustment can be performed using the following functions:","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"censor;\nwet_threshold;\npwet.","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"More details are available in the Example.","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"note: Note\nThe library was developed with the idea of post-processing the outputs of numerical climate models. This is why several functions use terminology associated with climate sciences. The functions are however general enough to be applied to other contexts. For example, censoring can be done for a threshold different from 0.","category":"page"},{"location":"description/#References","page":"Quantile matching in Julia","title":"References","text":"","category":"section"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"Michelangeli, P.-A., Vrac, M., and Loukos, H. (2009), Probabilistic downscaling approaches:  Application to wind cumulative distribution functions, Geophys. Res. Lett., 36, L11708, doi:10.1029/2009GL038401.","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"Panofsky, H. and Brier, G. (1968). Some Applications of Statistics to Meteorology, Earth and Mineral Sciences Continuing Education, College of Earth and Mineral Sciences, The Pennsylvania State University.","category":"page"},{"location":"description/","page":"Quantile matching in Julia","title":"Quantile matching in Julia","text":"Themeßl, M., Gobiet, A. and Leuprecht, A. (2011). Empirical-statistical downscaling and error correction of daily precipitation from regional climate models, International Journal of Climatology, 31, 1530–1544, https://doi.org/https://doi.org/10.1002/joc.2168.","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Contributions are welcomed. Here's the workflow for development of new features, refactoring and bugfix.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"main               # Stable branch, always ready to be tagged\ndev                # Development branch. New features, refactoring, bug and hotfix\n                   # are integrated into dev before going into master.\nfeature/           # New feature needs a `feature` prefix\n   <feature-name>     \nrefactor/          # Refactoring are tagged with a `refactor` prefix\n   <refactor-name>\nbug/               # Prefix for bugs found during development\n   <bug-fix>       \nhotfix/            # Prefix for hotfix (bugs for deployed versions)\n   <hot-fix>    ","category":"page"},{"location":"#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"#Abstract-Quantile-Matching-model","page":"Index","title":"Abstract Quantile Matching model","text":"","category":"section"},{"location":"#Types","page":"Index","title":"Types","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"Modules = [QuantileMatching]\nOrder   = [:type]\nPages = [\n    \"src/AbstractQuantileMatchingModel.jl\",\n    \"src/AbstractQuantileMatchingModel/EmpiricalQuantileMatchingModel.jl\",\n    \"src/AbstractQuantileMatchingModel/ParametricQuantileMatchingModel.jl\"\n    ]","category":"page"},{"location":"#QuantileMatching.AbstractQuantileMatchingModel","page":"Index","title":"QuantileMatching.AbstractQuantileMatchingModel","text":"AbstractQuantileMatchingModel\n\nAbstract type containing the concrete types EmpiricalQuantileMatchingModel and ParametricQuantileMatchingModel.\n\n\n\n\n\n","category":"type"},{"location":"#QuantileMatching.EmpiricalQuantileMatchingModel","page":"Index","title":"QuantileMatching.EmpiricalQuantileMatchingModel","text":"EmpiricalQuantileMatchingModel{T}\n\nStructure containing the different distributions for performing empirical quantile matching.\n\nDetails\n\ntargetsample: target sample (local-scale sample for the calibration period)\nactualsample: actual sample (large-scale sample for the calibration period)\nprojsample: projected sample (large-scale sample for the projected period)\nnbins: number of bins used to compute the transfert function\nextrapolation: extrapolation method when large-scale values lies outside the range of the local-scale values. \n\nIt should be an Interpolations.BoundaryCondition type like for example Interpolations.Flat() and Interpolations.Line().\n\nIf extrapolation = Interpolations.Flat(), there is no extrapolation of the local-scale quantile. The post-processed value is either the minimum or the maximum of the local-scale values. \n\nIf extrapolation = Interpolations.Line(), post-processed quantiles beyond the range of the local-scale values are extrapolated using a linear model. \n\nIf the projsample is not provided, the quantile matching model is assumed to be stationary and the actual distribution is post-processed.\n\nSee also ParametricQuantileMatchingModel\n\n\n\n\n\n","category":"type"},{"location":"#QuantileMatching.ParametricQuantileMatchingModel","page":"Index","title":"QuantileMatching.ParametricQuantileMatchingModel","text":"ParametricQuantileMatchingModel{T}\n\nStructure containing the different distributions for performing parametric quantile matching.\n\nDetails\n\ntargetdist: target distribution (local-scale distribution for the calibration period)\nactualdist: actual distribution (large-scale distribution for the calibration period)\nprojdist: projected distribution (large-scale distribution for the projected period)\n\nIf the projdist is not provided, the quantile matching model is assumed to be stationary and the actual distribution is post-processed.\n\nSee also EmpiricalQuantileMatchingModel\n\n\n\n\n\n","category":"type"},{"location":"#Methods","page":"Index","title":"Methods","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"Modules = [QuantileMatching]\nOrder   = [:function]\nPages = [\n    \"src/AbstractQuantileMatchingModel.jl\",\n    \"src/AbstractQuantileMatchingModel/EmpiricalQuantileMatchingModel.jl\",\n    \"src/AbstractQuantileMatchingModel/ParametricQuantileMatchingModel.jl\"\n    ]","category":"page"},{"location":"#Base.match","page":"Index","title":"Base.match","text":"match(qmm::AbstractQuantileMappingModel, x::Vector{<:Real})\n\nMatch the values in x according to the model qmm.\n\nDetails\n\nThe function uses the cdf-t method proposed by Michelangeli et al. (2009).\n\nThis is a type-stable function. This is why  it takes a vector as argument and returns a vector.  For matching a scalar value x, wrap it in the vector [x].\n\nReference\n\nMichelangeli, P.-A., Vrac, M., and Loukos, H. (2009), Probabilistic downscaling approaches:  Application to wind cumulative distribution functions, Geophys. Res. Lett., 36, L11708, doi:10.1029/2009GL038401.\n\n\n\n\n\n","category":"function"},{"location":"#QuantileMatching.projcdf-Tuple{ParametricQuantileMatchingModel, Real}","page":"Index","title":"QuantileMatching.projcdf","text":"projcdf(nspqm::ParametricQuantileMatchingModel, x::Real)\n\nCompute the post-processed cdf of the projections using the cdf-t approach.\n\nSee also projquantile.\n\n\n\n\n\n","category":"method"},{"location":"#QuantileMatching.projquantile-Tuple{ParametricQuantileMatchingModel, Real}","page":"Index","title":"QuantileMatching.projquantile","text":"function projquantile(nspqm::ParametricQuantileMatchingModel, p::Real)\n\nCompute the quantile function corresponding to the projection cdf.\n\nSee also projcdf.\n\n\n\n\n\n","category":"method"},{"location":"#Functions","page":"Index","title":"Functions","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"Modules = [QuantileMatching]\nOrder   = [:function]\nPages = [\n    \"src/functions.jl\"\n    ]","category":"page"},{"location":"#QuantileMatching.censor-Tuple{Vector{<:Real}, Real}","page":"Index","title":"QuantileMatching.censor","text":"censor(y::Vector{<:Real}, u::Real ; fillvalue::Real=0)\n\nReturn the vector for which the value below u are filled with fillvalue and where u is substracted from the remaining values.\n\nSee also pwet and wet_threshold.\n\n\n\n\n\n","category":"method"},{"location":"#QuantileMatching.pwet","page":"Index","title":"QuantileMatching.pwet","text":"pwet(y::Vector{<:Real}, threshold::Real=0.)\n\nCompute the proportion of values of y greater than threshold.\n\nSee also censor and wet_threshold.\n\n\n\n\n\n","category":"function"},{"location":"#QuantileMatching.wet_mean","page":"Index","title":"QuantileMatching.wet_mean","text":"wet_mean(y::Vector{<:Real}, threshold::Real=zero(eltype(y)))\n\nCompute the mean of the elements of y exceeding the threshold threshold.\n\nSee also wet_quantile and wet_sum.\n\n\n\n\n\n","category":"function"},{"location":"#QuantileMatching.wet_quantile","page":"Index","title":"QuantileMatching.wet_quantile","text":"wet_quantile(y::Vector{<:Real}, p::Real; threshold::Real=zero(eltype(y)))\n\nCompute the empirical quantile of order p of the values y exceeding the threshold threshold.\n\nSee also wet_mean and wet_sum.\n\n\n\n\n\n","category":"function"},{"location":"#QuantileMatching.wet_sum","page":"Index","title":"QuantileMatching.wet_sum","text":"wet_sum(y::Vector{<:Real}, threshold::Real=zero(eltype(y)))\n\nCompute the sum of the elements of y exceeding the threshold threshold.\n\nSee also wet_mean and wet_quantile.\n\n\n\n\n\n","category":"function"},{"location":"#QuantileMatching.wet_threshold-Tuple{Vector{<:Real}, Real}","page":"Index","title":"QuantileMatching.wet_threshold","text":"wet_threshold(y::Vector{<:Real}, p::Real ; lowerbound::Real=0., upperbound::Real=5.)\n\nFind the threshold for which the proportion of y values above this threshold is p.\n\nSee also pwet and censor.\n\n\n\n\n\n","category":"method"},{"location":"example/#Example","page":"Example","title":"Example","text":"","category":"section"}]
}
